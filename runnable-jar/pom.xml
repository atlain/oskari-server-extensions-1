<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
        <groupId>eu.elf.oskari</groupId>
		<artifactId>elf-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<artifactId>elf-jetty</artifactId>
	<packaging>jar</packaging>
	<name>ELF Jetty Server</name>

	<properties>
		<jetty.version>9.1.0.M0</jetty.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>fi.nls.oskari</groupId>
			<artifactId>map-servlet</artifactId>
			<version>${oskari.version}</version>
		</dependency>
		<dependency>
			<groupId>fi.nls.oskari.service</groupId>
			<artifactId>oskari-search-nls</artifactId>
			<version>${oskari.version}</version>
		</dependency>
		<dependency>
			<groupId>fi.nls.oskari</groupId>
			<artifactId>standalone-jetty</artifactId>
			<version>${oskari.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-plus</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-jsp</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-jaas</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${commons-dbcp2.version}</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>fi.nls.oskari.elf.jetty.JettyRunner</mainClass>
					<includePluginDependencies>true</includePluginDependencies>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<finalName>oskari-jetty-${project.version}</finalName>
					<outputDirectory>${basedir}/dist</outputDirectory>
					<transformers>
						<!-- annotation processing using SPI needs services transformer or
							only the last SPI with same name is used. This means multiple dependencies
							with OskariActionRoutes won't work without ServicesResourceTransformer -->
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
						<!-- Write out main class so we can start with just "java -jar oskari-jetty-[version].jar" -->
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<manifestEntries>
								<Main-Class>fi.nls.oskari.elf.jetty.JettyRunner</Main-Class>
								<Build-Number>${project.version}</Build-Number>
								<Class-Path>.</Class-Path>
							</manifestEntries>
						</transformer>
					</transformers>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<!-- Exclude any manifest files in dependencies since java doesn't
								like the jar signature if we do -->
							<excludes>
								<exclude>META-INF/MANIFEST.MF</exclude>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
			</plugin>
			<!-- Copy the JSP files for dist/jsp folder FIXME: this doesn't propably work -->
			<!-- plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/dist/jsp</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/webapp</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin -->
		</plugins>
	</build>
</project>
